/*! vue-check-viewport v0.0.6 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["vue-check-viewport"]=t():e["vue-check-viewport"]=t()}(window,function(){return function(e){var t={};function i(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}return i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=null;var o={name:"VueCheckViewport",props:{tag:{type:String,default:"div"},options:{type:Object,default:function(){return{root:null,rootMargin:"0px",threshold:[0,.85,1],intersectionRatio:.85}}}},data:function(){return{isVisible:void 0}},render:function(e){return e(this.tag,this.$slots.default)},mounted:function(){this.initObserver()},beforeDestroy:function(){this.destroyObserver()},methods:{initObserver:function(){window.IntersectionObserver?this.initIntersectionObserver():this.initFallback()},initIntersectionObserver:function(){var e;n||(e=this.options,n=new window.IntersectionObserver(function(t){t.forEach(function(t){t.intersectionRatio<e.intersectionRatio?t.target.__vue__.onUnVisible():t.target.__vue__.onVisible()})},e)),n.observe(this.$el)},initFallback:function(){(this.options.root||window).addEventListener("scroll",this.listener,!1),window.addEventListener("load",this.listener,!1),window.addEventListener("resize",this.listener,!1),window.addEventListener("DOMContentLoaded",this.listener,!1),this.listener()},listener:function(){var e,t,i,n,o,r,s;(e=this.$el,t=this.options,i=e.getBoundingClientRect(),n=window.innerWidth||document.documentElement.clientWidth,o=window.innerHeight||document.documentElement.clientHeight,r=i.width,s=i.height,i.bottom<=0||i.top>=o||i.right<=0||i.left>=n||(i.top<0&&(s+=i.top),i.bottom>o&&(s=s+o-i.bottom),i.left<0&&(r+=i.left),i.right>n&&(r=r+n-i.right),!(r*s>=i.width*i.height*t.intersectionRatio)))?this.onUnVisible():this.onVisible()},onVisible:function(){!0!==this.isVisible&&(this.isVisible=!0,this.$emit("on-visible"))},onUnVisible:function(){!1!==this.isVisible&&(this.isVisible=!1,this.$emit("on-un-visible"))},destroyObserver:function(){window.IntersectionObserver?this.destroyIntersectionObserver():this.destroyFallback()},destroyFallback:function(){(this.options.root||window).removeEventListener("scroll",this.listener,!1),window.removeEventListener("load",this.listener,!1),window.removeEventListener("resize",this.listener,!1),window.removeEventListener("DOMContentLoaded",this.listener,!1)},destroyIntersectionObserver:function(){n&&n.unobserve(this.$el)}}};t.default=o}])});